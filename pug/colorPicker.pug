extends templates/main.pug

block title
    .
        Color Picker


block head
    style.
        #red, #green, #blue {
            
            width: 400px;
            margin: 15px;
        }
        #swatch {
            width: 200px;
            height: 200px;
           
            background-image: none;
        }
        #red .ui-slider-range { background: #ef2929; }
        #red .ui-slider-handle { border-color: #ef2929; }
        #green .ui-slider-range { background: #8ae234; }
        #green .ui-slider-handle { border-color: #8ae234; }
        #blue .ui-slider-range { background: #729fcf; }
        #blue .ui-slider-handle { border-color: #729fcf; }

        .row{margin-bottom:30px}

        #redHex,#greenHex,#blueHex,#fullHex{
            font-weight:bold;
            font-size:2em;
        }
    link(href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet")

block contentContainer
    .container
        .row
            .col
                h1 Color mixer
        .row
            .col
                .row
                    .col 
                        #red
                        |Computer value for red: 
                        span#redHex
                
                .row
                    .col
                        #green
                        |Computer value for green: 
                        span#greenHex

                .row
                    .col
                        #blue
                        |Computer value for blue: 
                        span#blueHex
            .col
                #swatch
                p
                    |Computer value for mixture of red, green, and blue: 
                    span#fullHex
 
        
                
block extraCode
    script(src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous")
    script.
        $( function() {
            function hexFromRGB(r, g, b) {
                var hex = [
                    r.toString( 16 ),
                    g.toString( 16 ),
                    b.toString( 16 )
                ];
                $.each( hex, function( nr, val ) {
                    if ( val.length === 1 ) {
                    hex[ nr ] = "0" + val;
                    }
                });
                return hex;
            }
            function refreshSwatch() {
                var red = $( "#red" ).slider( "value" ),
                    green = $( "#green" ).slider( "value" ),
                    blue = $( "#blue" ).slider( "value" ),
                    hex = hexFromRGB( red, green, blue );

                    $('#redHex').html(hex[0].toUpperCase())
                    $('#greenHex').html(hex[1].toUpperCase())
                    $('#blueHex').html(hex[2].toUpperCase())

                    hexfull=hex.join( "" ).toUpperCase()

                    $('#fullHex').html(hexfull)

                $( "#swatch" ).css( "background-color", "#" + hexfull );
            }
        
            $( "#red, #green, #blue" ).slider({
                orientation: "horizontal",
                range: "min",
                max: 255,
                value: 127,
                slide: refreshSwatch,
                change: refreshSwatch
            });
            $( "#red" ).slider( "value", 255 );
            $( "#green" ).slider( "value", 140 );
            $( "#blue" ).slider( "value", 60 );
        } );
